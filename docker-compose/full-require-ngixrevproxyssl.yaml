#
#
# WARNING!!
# DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU'RE DOING
# ALL NECESSARY VARIABLES ARE EDITABLE FORM .env FILE
#
# This docker-compose file require NGIX REVERSE PROXY SSL it can be found on
# https://github.com/mindhosting/ngix-ssl-revproxy
# all containers must run over bridge network
# if you do not want to use ssl just comment lignes all ligne with LETSENCRYPT_HOST LETSENCRYPT_EMAIL

version: '3'
services:
  db:
    env_file:
      - ./.env
    image: mysql:5.7.29
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      TZ: ${TIMEZONE}
    volumes:
      - ./volumes/db_data:/var/lib/mysql
    network_mode: bridge
  moodle:
    env_file:
      - ./.env
    image: mindhosting/moodle:latest
    depends_on:
      - db
    restart: unless-stopped
    links:
      - ${DATABASE_HOST}:${DATABASE_HOST}
    volumes:
      - ./volumes/public_html:/web_data/public_html
      - ./volumes/moodledata:/web_data/moodledata
      # FOR DUPLICATI BACKUP PURPUSE
      - ./volumes/db_data:/web_data/db_data
      - ./volumes/backup:/web_data/backup
    hostname: ${DOMAIN_NAME}
    environment:
      FILE_MANAGER_USER: ${FILE_MANAGER_USER}
      FILE_MANAGER_PASSWORD: ${FILE_MANAGER_PASSWORD}
      MOODLE_DB_TYPE: mysqli
      MOODLE_DB_HOST: ${DATABASE_HOST}
      MOODLE_DB_USER: ${DATABASE_USER}
      MOODLE_DB_NAME: ${DATABASE_NAME}
      MOODLE_DB_PASS: ${DATABASE_PASSWORD}
      MOODLE_DB_PRFX: mdl_
      MOODLE_DATA_ROOT: /web_data/moodledata
      MOODLE_DIRECTORY_PERMISSIONS: 02777
      MOODLE_ADMIN_DIRECTORY: admin
      MOODLE_HOST_PROTOCOLE: https
      VIRTUAL_HOST: '${DOMAIN_NAME}'
      LETSENCRYPT_HOST: '${DOMAIN_NAME}'
      LETSENCRYPT_EMAIL: '${LETSENCRYPT_EMAIL}'
      TZ: ${TIMEZONE}
      LANG: ${LANG}
      ADMINUSER: ${ADMINUSER}
      ADMINPASS: ${ADMINPASS}
      ADMINEMAIL: ${ADMINEMAIL}
      FULLNAME: ${FULLNAME}
      SHORTNAME: ${SHORTNAME}
    network_mode: bridge
  duplicati:
    env_file:
      - ./.env
    image: linuxserver/duplicati
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: ${TIMEZONE}
      CLI_ARGS: #optional
      VIRTUAL_HOST: duplicat.'${DOMAIN_NAME}'
      LETSENCRYPT_HOST: duplicati.'${DOMAIN_NAME}'
      LETSENCRYPT_EMAIL: '${LETSENCRYPT_EMAIL}'
    volumes:
      # TO CONTROLE DOCKER SOCK AND DOCKER TO STOP/START MYSQL CONTAINER BEFORE/AFTER BACKUP
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - ./volumes/backup/script.sh:/usr/bin/script.sh
      # ACCESS TO VOLUME SOURCES
      - ./volumes:/source
      # BACKUP DISTINATION
      - ./volumes/backup/backups:/backups
      # DUPLICATI CONFIGURATION
      - /volumes/backup/config:/config
    hostname: ${DOMAIN_NAME}
    network_mode: bridge
  phpmyadmin:
    env_file:
      - ./.env
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    depends_on:
      - db
    links:
      - ${DATABASE_HOST}:${DATABASE_HOST}
    environment:
      MYSQL_USERNAME: root
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      PMA_HOST: ${DATABASE_HOST}
      #PMA_ABSOLUTE_URI: ${WEB_PROTOCOLE}://phpmyadmin.${DOMAIN_NAME}/
      TZ: ${TIMEZONE}
      VIRTUAL_HOST: phpmyadmin.'${DOMAIN_NAME}'
      LETSENCRYPT_HOST: phpmyadmin.'${DOMAIN_NAME}'
      LETSENCRYPT_EMAIL: '${LETSENCRYPT_EMAIL}'
    network_mode: bridge