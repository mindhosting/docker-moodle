#
# WARNING!!
# DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU'RE DOING
# ALL NECESSARY VARIABLES ARE EDITABLE FORM .env FILE
#

version: '3'
services:
  reverse-proxy:
    image: traefik:v2.2
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    env_file:
      - ./.env
    image: mysql:5.7.29
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    volumes:
      - ./volumes/db_data:/var/lib/mysql
  moodle:
    env_file:
      - ./.env
    build: ./docker/moodle38
    depends_on:
      - db
      - reverse-proxy
    restart: unless-stopped
    links:
      - ${DATABASE_HOST}:${DATABASE_HOST}
    volumes:
      - ./volumes/public_html:/web_data/public_html
      - ./volumes/moodledata:/web_data/moodledata
      # FOR DUPLICATI BACKUP PURPUSE
      - ./volumes/db_data:/web_data/db_data
      - ./volumes/backup:/web_data/backup
    labels:
      #- "traefik.http.routers.moodle.rule=(Host(`moodle.docker.localhost`) || Host(`www.moodle.docker.localhost`))"
      - "traefik.http.routers.moodle.rule=Host(`${DOMAIN_NAME}`)"
    environment:
      FILE_MANAGER_USER: ${FILE_MANAGER_USER}
      FILE_MANAGER_PASSWORD: ${FILE_MANAGER_PASSWORD}
      MOODLE_DB_TYPE: ${DATABASE_TYPE}
      MOODLE_DB_HOST: ${DATABASE_HOST}
      MOODLE_DB_USER: ${DATABASE_USER}
      MOODLE_DB_NAME: ${DATABASE_NAME}
      MOODLE_DB_PASS: ${DATABASE_PASSWORD}
      MOODLE_DB_PRFX: ${DATABASE_PRFX}
      MOODLE_DATA_ROOT: ${MOODLE_DATA_ROOT}
      MOODLE_DIRECTORY_PERMISSIONS: ${MOODLE_DIRECTORY_PERMISSIONS}
      MOODLE_ADMIN_DIRECTORY: ${MOODLE_ADMIN_DIRECTORY}
      MOODLE_HOST_PROTOCOLE: ${WEB_PROTOCOLE}
      VIRTUAL_HOST: '${DOMAIN_NAME}'
  duplicati:
    env_file:
      - ./.env
    image: duplicati/duplicati
    restart: unless-stopped
    depends_on:
      - reverse-proxy
    volumes:
      # TO CONTROLE DOCKER SOCK AND DOCKER TO STOP/START MYSQL CONTAINER BEFORE/AFTER BACKUP
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - ./volumes/duplicati_scripts:/usr/bin/cc_scripts
      # ACCESS TO VOLUME SOURCES
      - ./volumes:/src/docker-volumes
      # BACKUP DISTINATION
      - ./volumes/backup:/data
    labels:
      - "traefik.http.routers.duplicati.rule=(Host(`${DOMAIN_NAME}`) && PathPrefix(`/duplicati/`))"
      - "traefik.http.routers.duplicati.middlewares=duplicati-prefix"
      - "traefik.http.middlewares.duplicati-prefix.stripprefix.prefixes=/duplicati/"
      - "traefik.http.routers.duplicati.priority=89"
      - "traefik.http.services.duplicati.loadbalancer.server.port=8200"
  phpmyadmin:
    env_file:
      - ./.env
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    depends_on:
      - db
      - reverse-proxy
    links:
      - ${DATABASE_HOST}:${DATABASE_HOST}
    environment:
      MYSQL_USERNAME: root
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      PMA_HOST: ${DATABASE_HOST}
      PMA_ABSOLUTE_URI: ${WEB_PROTOCOLE}://${DOMAIN_NAME}/phpmyadmin/
    labels:
      - "traefik.http.routers.phpmyadmin.rule=(Host(`${DOMAIN_NAME}`) && PathPrefix(`/phpmyadmin/`))"
      - "traefik.http.routers.phpmyadmin.middlewares=phpmyadmin-prefix"
      - "traefik.http.middlewares.phpmyadmin-prefix.stripprefix.prefixes=/phpmyadmin/"
      - "traefik.http.routers.phpmyadmin.priority=99"